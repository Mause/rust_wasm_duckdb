[env]
EMMAKEN_CFLAGS = "-s ERROR_ON_UNDEFINED_SYMBOLS=0 -s ALLOW_MEMORY_GROWTH=1 -s TOTAL_MEMORY=33554432 -s DEFAULT_LIBRARY_FUNCS_TO_INCLUDE=$readAsmConstArgs,__start_em_asm,__end_em_asm  -sEXTRA_EXPORTED_RUNTIME_METHODS=[ccall,cwrap,callback] -s ASSERTIONS=1 -s SAFE_HEAP=1"

[tasks.build]
clear = true
dependencies = ['prebuild']
command = "cargo"
args = ["build", "--tests", "--target", "wasm32-unknown-emscripten", "-vv"]

[tasks.deploy]
dependencies = ["ci-flow"]
command = "cargo"
args = ["web", "deploy", "--use-system-emscripten"]

[tasks.docs]
dependencies = ["prebuild"]
command = "cargo"
args = ["doc", "--target", "wasm32-unknown-emscripten", "--bins", "--document-private-items"]

[tasks.expand]
command = "cargo"
args = ["expand", "--target", "wasm32-unknown-emscripten", ">", "output.rs"]

[tasks.prebuild]
condition = { files_not_exist = ["${CARGO_MAKE_WORKING_DIRECTORY}/target/duckdb.wasm", "${CARGO_MAKE_WORKING_DIRECTORY}/target/duckdb.hpp"] }
script_runner = "@rust"
script = { file = "setup.rs" }

[tasks.start]
dependencies = ["prebuild"]
command = "cargo"
args = ["web", "start"]

[tasks.test]
clear = true
dependencies = ['build']
command = "cargo"
args = ["web", "test", "--nodejs", "--use-system-emscripten", "--", "--nocapture"]
