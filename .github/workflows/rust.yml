name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  PROD_DEPLOY: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

jobs:
  clippy_check:
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk:2.0.15
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: clippy
        override: true
        target: wasm32-unknown-emscripten
    - uses: davidB/rust-cargo-make@v1
      with:
        version: latest
    - name: Install openssl
      run: |
        sudo apt update
        sudo apt-get install pkg-config build-essential libssl-dev --yes
    - name: Run CI
      uses: actions-rs/cargo@v1
      with:
        command: make
        args: prebuild
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features --target wasm32-unknown-emscripten

  deploy:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: deploy
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm i -g vercel
      - run: vercel link --confirm --token ${{ secrets.VERCEL_TOKEN }}
      - if: ${{ env.PROD_DEPLOY == 'false' }}
        run: vercel deploy . --token ${{ secrets.VERCEL_TOKEN }}
      - if: ${{ env.PROD_DEPLOY == 'true' }}
        run: vercel deploy . --token ${{ secrets.VERCEL_TOKEN }} --prod

  build:
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk:2.0.15

    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2021-03-25
        override: true
        components: rustfmt, clippy
        target: wasm32-unknown-emscripten
    - name: Cache .cargo
      id: cache-primes
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-${{ hashFiles('Cargo**') }}
    - name: Install rust script
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-web
    - name: Install openssl
      run: |
        sudo apt update
        sudo apt-get install pkg-config build-essential libssl-dev --yes
    - uses: davidB/rust-cargo-make@v1
      with:
        version: latest
    - name: Run CI
      uses: actions-rs/cargo@v1
      with:
        command: make
        args: deploy
    - uses: actions/upload-artifact@v2
      with:
        name: deploy
        path: target/deploy
